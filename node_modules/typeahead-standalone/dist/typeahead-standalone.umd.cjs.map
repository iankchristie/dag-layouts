{"version":3,"file":"typeahead-standalone.umd.cjs","sources":["../src/helpers.ts","../src/fetchWrapper/fetchWrapper.ts","../src/trie/trie.ts","../src/typeahead-standalone.ts"],"sourcesContent":["import type { Dictionary } from './common.d.ts';\n\nexport const NOOP = (...args: unknown[]): void => undefined;\n\nexport const escapeRegExp = (text: string): string => text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\nexport const isObject = (item: unknown): boolean => {\n  return item !== null && (item as Dictionary)?.constructor.name === 'Object';\n};\n\n/** @deprecated */\nexport const deduplicateArr = (iterable: Dictionary[], prop: string): Dictionary[] => [\n  ...new Map(iterable.map((item) => [item[prop], item])).values(),\n];\n\nexport const diacritics = (txt = '') => txt.normalize('NFD').replace(/\\p{Diacritic}/gu, '');\n\n/****** helpers specific to typeahead  *****/\n\nexport const normalizer = <T extends Dictionary>(listItems: string[] | Dictionary[] | T[], identifier: string): T[] => {\n  const length = listItems.length;\n  if (!length) return [];\n\n  // validate array of objects\n  if (isObject(listItems[0])) {\n    // verify if identifier exists (i.e. normalized already)\n    for (let x = 0; x < length; x++) {\n      if (!(identifier in (listItems[x] as Dictionary))) {\n        throw new Error('e03');\n      }\n    }\n    return listItems as T[];\n  }\n\n  // normalize array of strings\n  const normalizedData = (listItems as []).reduce(function (acc: Record<string, unknown>[], currentItem) {\n    acc.push({\n      [identifier]: currentItem && typeof currentItem === 'string' ? currentItem : JSON.stringify(currentItem),\n    });\n    return acc;\n  }, []);\n\n  return normalizedData as T[];\n};\n\n/****** helpers specific to Trie  *****/\n\nexport const spaceTokenizer = (tokenString: string): string[] => tokenString.trim().split(/\\s+/);\n","// A custom FETCH API wrapper\n// inspired by https://jasonwatmore.com/post/2020/04/18/fetch-a-lightweight-fetch-wrapper-to-simplify-http-requests\n\nconst get = async function (url: RequestInfo | URL, requestOptions?: RequestInit): Promise<any> {\n  const response = await fetch(\n    url,\n    requestOptions || {\n      method: 'GET',\n    }\n  );\n  return handleResponse(response);\n};\n\n// helper function\nconst handleResponse = async function (response: Response) {\n  const text = await response.text();\n  const data = text && JSON.parse(text);\n  if (!response.ok) {\n    return Promise.reject((data && data.message) || response.statusText);\n  }\n  return data;\n};\n\nexport const fetchWrapper = {\n  get,\n};\n\n/*\n * @deprecated: Post method not required at the moment\n */\n// const post = async function (url: string, body: unknown): Promise<any> {\n//   const requestOptions = {\n//     method: 'POST',\n//     headers: { 'Content-Type': 'application/json' },\n//     body: JSON.stringify(body),\n//   };\n//   const response = await fetch(url, requestOptions);\n//   return handleResponse(response);\n// };\n","import type { Dictionary } from '../common.d.ts';\nimport type { SearchResults, TrieType } from './types.d.ts';\nimport { spaceTokenizer, diacritics } from '../helpers.js';\n\n// Trie algorithm (inspired by data structures @https://github.com/Yomguithereal/mnemonist)\nexport const Trie: TrieType<any> = (config = {}) => {\n  const { hasDiacritics } = config;\n  let root: Record<string, unknown> = {};\n\n  // marks the end of a string\n  const SENTINEL = String.fromCharCode(0);\n\n  /**\n   * Returns data/query tokens\n   */\n  function tokenize(value = '') {\n    value = `${value}`; // coerce to string\n\n    if (hasDiacritics) {\n      value = diacritics(value);\n    }\n    // make search case insensitive\n    return spaceTokenizer(value.toLowerCase());\n  }\n\n  /**\n   * Method used to add the given data to the trie.\n   * Identifier is optional when data is a string|string[], but mandatory for Dictionary[]\n   */\n  function add(data: string | string[] | Dictionary[], identifier = '', identity?: (item?: unknown) => void) {\n    if (!data) return;\n\n    let node = root;\n    let token;\n    data = (data.constructor === Array ? data : [data]) as [];\n\n    data.forEach((value: string | Dictionary) => {\n      // we tokenize the incoming data to make search possible by fragments\n      const dataTokens = tokenize(typeof value === 'string' ? value : (value[identifier] as string));\n      dataTokens\n        .filter((item) => item) // filter out falsy values\n        .forEach((prefix) => {\n          node = root;\n\n          for (let i = 0, l = prefix.length; i < l; i++) {\n            token = prefix[i];\n            node = (node[token] || (node[token] = {})) as Record<string, unknown>;\n          }\n\n          const uniqueId = typeof value === 'string' ? value : (identity && identity(value)) || JSON.stringify(value);\n\n          if (!node[SENTINEL]) {\n            node[SENTINEL] = {\n              [uniqueId]: value,\n            };\n          } else {\n            (node[SENTINEL] as Dictionary)[uniqueId] = value;\n          }\n        });\n    });\n  }\n\n  /**\n   * Internal Method used to retrieve items in the trie beginning with the given prefix.\n   */\n  function find(prefix: string): Dictionary {\n    let node = root;\n    let matches: Dictionary = {};\n    let token;\n\n    // traverse the root until you reach the end of prefix\n    for (let i = 0, l = prefix.length; i < l; i++) {\n      token = prefix[i]; // each letter of search string\n      node = node[token] as Record<string, unknown>;\n      if (typeof node === 'undefined') return {};\n    }\n\n    // Performing DFS (Depth-First Search) from prefix to traverse the tree\n    const nodeStack = [node];\n    const prefixStack = [prefix];\n    let k;\n\n    while (nodeStack.length) {\n      prefix = prefixStack.pop() as string;\n      node = nodeStack.pop() as Record<string, unknown>;\n\n      for (k in node) {\n        if (k === SENTINEL) {\n          matches = Object.assign(matches, node[SENTINEL]);\n          continue;\n        }\n\n        nodeStack.push(node[k] as Record<string, unknown>);\n        prefixStack.push(prefix + k);\n      }\n    }\n\n    return matches as Dictionary;\n  }\n\n  /**\n   * Search for query strings within the trie\n   */\n  function search(query: string, limit?: number): SearchResults<Dictionary | string> {\n    const queryTokens = tokenize(query);\n\n    // Search for multiple tokens/queries\n    const objArrs: Dictionary[] = [];\n    let suggestions: Dictionary | Dictionary[] = {};\n    queryTokens.forEach((token) => {\n      // note that limit is not passed to \"find()\"\n      objArrs.push(find(token) as Dictionary);\n    });\n\n    // get intersection of found suggestions\n    suggestions = objArrs.reduce((acc: Dictionary, currentObj: Dictionary) => {\n      const result: Dictionary = {};\n\n      Object.keys(acc)\n        .filter((key: string) => currentObj[key]) // keep suggestions with common keys\n        .forEach((key) => {\n          result[key] = acc[key];\n        });\n\n      return result;\n    });\n\n    suggestions = Object.values(suggestions) as Dictionary[];\n\n    const count = suggestions.length;\n\n    // truncate suggestions to limit\n    if (limit && count > limit) {\n      suggestions.length = limit;\n    }\n\n    return {\n      suggestions,\n      count,\n    };\n  }\n\n  function clear() {\n    root = {};\n  }\n\n  return {\n    add,\n    clear,\n    search,\n  };\n};\n","/*\n * https://github.com/digitalfortress-tech/typeahead-standalone\n * Copyright (c) 2020 Niket Pathak\n * MIT License\n */\n\nimport type {\n  typeaheadResult,\n  typeaheadConfig,\n  typeaheadHtmlTemplates,\n  Dictionary,\n  LocalDataSource,\n  RemoteDataSource,\n  PrefetchDataSource,\n  ResultSet,\n  typeaheadStyleClasses,\n} from './common.d.ts';\nimport { diacritics, escapeRegExp, isObject, NOOP, normalizer } from './helpers.js';\nimport { fetchWrapper } from './fetchWrapper/fetchWrapper.js';\nimport { Trie } from './trie/trie.js';\nimport './style.less';\n\nexport default function typeahead<T extends Dictionary>(config: typeaheadConfig<T>): typeaheadResult<T> {\n  // check required params\n  if (!config.input) throw new Error('e01');\n  if (!isObject(config.source)) throw new Error('e02');\n\n  const doc = document;\n\n  const listContainer: HTMLDivElement = doc.createElement('div');\n  const debounceXHR = config.debounceRemote || 100;\n  const preventSubmit = config.preventSubmit || false;\n  const minLen = config.minLength || 1;\n  const hint = config.hint === false ? false : true;\n  const autoSelect = config.autoSelect || false;\n  const templates: typeaheadHtmlTemplates<T> | undefined = config.templates;\n  const trie = Trie({ hasDiacritics: config.diacritics });\n  const identifier = config.source.identifier || 'label'; // label is the default identifier\n  const groupIdentifier = config.source.groupIdentifier || '';\n  const displayCb = <T extends Dictionary>(item: T): string => {\n    return `${item[identifier]}`;\n  };\n  const display: (item: T, e?: MouseEvent | KeyboardEvent | null) => string = config.display || displayCb;\n  const identity = config.source.identity || displayCb;\n  const onSubmit: (e: Event, item?: T) => void = config.onSubmit || NOOP;\n  const dataTokens = config.source.dataTokens?.constructor === Array ? config.source.dataTokens : undefined;\n  const transform = config.source.transform || ((data) => data);\n  const local = (config.source as LocalDataSource<T>).local || null;\n  const remoteUrlType = typeof (config.source as RemoteDataSource<T>).remote?.url;\n  const remote =\n    remoteUrlType === 'function' ||\n    (remoteUrlType === 'string' && (config.source as RemoteDataSource<T>).remote.wildcard)\n      ? (config.source as RemoteDataSource<T>).remote\n      : null;\n  const prefetch = (config.source as PrefetchDataSource<T>).prefetch?.url\n    ? { ...{ when: 'onInit', done: false }, ...(config.source as PrefetchDataSource<T>).prefetch }\n    : null;\n  const classNames: typeaheadStyleClasses = {\n    wrapper: '',\n    input: 'tt-input',\n    hint: 'tt-hint',\n    highlight: 'tt-highlight',\n    hide: 'tt-hide',\n    show: 'tt-show',\n    list: 'tt-list',\n    selected: 'tt-selected',\n    header: 'tt-header',\n    footer: 'tt-footer',\n    loader: 'tt-loader',\n    suggestion: 'tt-suggestion',\n    group: 'tt-group',\n    empty: 'tt-empty',\n    notFound: 'tt-notFound',\n    ...(config.classNames || {}),\n  };\n\n  // validate presence of atleast one data-source\n  if (!local && !prefetch && !remote) throw new Error('e02');\n\n  const resultSet: ResultSet<T> = {\n    query: '',\n    items: [], // suggestions\n    count: 0,\n    limit: config.limit || 5,\n  };\n\n  let remoteQueryCache: Dictionary = {};\n  let remoteResponseCache: Dictionary = {};\n\n  let selected: T | undefined;\n  let remoteDebounceTimer: number | undefined;\n  let fetchInProgress = false;\n  let storedInput = ''; // used only for keyboard navigation\n\n  // init templates if they exist\n  if (templates) {\n    templates.header = typeof templates.header === 'function' ? templates.header : undefined;\n    templates.footer = typeof templates.footer === 'function' ? templates.footer : undefined;\n    templates.notFound = typeof templates.notFound === 'function' ? templates.notFound : undefined;\n    templates.group = typeof templates.group === 'function' ? templates.group : undefined;\n    templates.suggestion = typeof templates.suggestion === 'function' ? templates.suggestion : undefined;\n    templates.loader = typeof templates.loader === 'function' ? templates.loader : undefined;\n    templates.empty = typeof templates.empty === 'function' ? templates.empty : undefined;\n  }\n\n  const addToIndex = (suggestions: string[] | Dictionary[] | T[] = []) => {\n    updateSearchIndex(normalizer(suggestions, identifier) as T[]);\n  };\n\n  // if local source exists, add the suggestions to the index\n  local && addToIndex(local);\n\n  const input: HTMLInputElement = config.input;\n  input.classList.add(classNames.input);\n  const computedInputStyle = window.getComputedStyle(input);\n\n  // Wrapper element\n  const wrapper: HTMLDivElement = doc.createElement('div');\n  // @deprecated config.className @todo: remove in v5\n  wrapper.className = `typeahead-standalone${config.className ? ` ${config.className}` : ''}${\n    classNames.wrapper ? ` ${classNames.wrapper}` : ''\n  }`;\n  resultSet.container = wrapper;\n\n  // move input element into the wrapper element\n  const parentEl = input.parentNode as HTMLElement;\n  const inputIndex = [...parentEl.children].indexOf(input);\n  parentEl.removeChild(input);\n  wrapper.appendChild(input);\n\n  // append Wrapper element to the original parent\n  parentEl.insertBefore(wrapper, parentEl.children[inputIndex]);\n\n  // generate markup for hints\n  const inputHint: HTMLInputElement = input.cloneNode() as HTMLInputElement;\n  hint && injectHintEl(inputHint);\n\n  listContainer.classList.add(classNames.list, classNames.hide);\n  listContainer.tabIndex = 0;\n  listContainer.setAttribute('aria-label', 'menu-options');\n  listContainer.setAttribute('role', 'listbox');\n\n  // set listContainer positioning\n  listContainer.style.position = 'absolute'; // IOS implementation for fixed positioning has many bugs, so we will use absolute positioning\n  listContainer.style.width = `${input.offsetWidth}px`;\n  listContainer.style.marginTop = `${input.offsetHeight + parseInt(computedInputStyle.marginTop)}px`;\n\n  // Attach list container\n  wrapper.appendChild(listContainer);\n\n  if (prefetch && prefetch.when === 'onInit') {\n    prefetchData();\n  }\n\n  function prefetchData() {\n    // check if data was already prefetched for current session\n    if (!prefetch || prefetch.done) return;\n\n    let transformed: T[] = [];\n\n    fetchWrapper\n      .get(typeof prefetch.url === 'function' ? prefetch.url() : prefetch.url, prefetch?.requestOptions)\n      .then(\n        (data) => {\n          transformed = transform(data) as T[];\n          transformed = normalizer(transformed, identifier) as T[];\n          updateSearchIndex(transformed);\n        },\n        (reject) => {\n          console.error('e04', reject);\n        }\n      )\n      .finally(() => {\n        typeof prefetch.process === 'function' && prefetch.process(transformed);\n      });\n\n    prefetch.done = true;\n  }\n\n  /**\n   * Display/show the listContainer\n   */\n  const show = (): void => {\n    listContainer.classList.remove(classNames.hide);\n  };\n\n  /**\n   * Hides the listContainer from DOM\n   */\n  const hide = (): void => {\n    listContainer.classList.add(classNames.hide);\n  };\n\n  /**\n   * Flag to indicate if the list of suggestions is open or not\n   * @returns Boolean\n   */\n  const isListOpen = (): boolean => !listContainer.classList.contains(classNames.hide);\n\n  /**\n   * Clear remote debounce timer if assigned\n   */\n  const clearRemoteDebounceTimer = (): void => {\n    if (remoteDebounceTimer) {\n      window.clearTimeout(remoteDebounceTimer);\n    }\n  };\n\n  /**\n   * Clear typeahead state and hide listContainer\n   */\n  const clear = (): void => {\n    resultSet.items = [];\n    inputHint.value = '';\n    storedInput = '';\n    hide();\n  };\n\n  /*\n   * Triggers a user input event\n   */\n  const emitInputEvent = (): void => {\n    input.dispatchEvent(\n      new InputEvent('input', {\n        bubbles: true,\n        inputType: 'insertCompositionText',\n        data: input.value,\n      })\n    );\n  };\n\n  /**\n   * Displays the NotFound template if it exists, otherwise, does nothing (i.e. returns true)\n   * @param asyncRender set to true for asyncRenders\n   * @returns true if no suggestions are found, else returns undefined\n   */\n  const noSuggestionsHandler = (asyncRender = false) => {\n    if (!resultSet.items.length && resultSet.query) {\n      // clear the list and the DOM\n      clear();\n      clearListDOM();\n\n      const notFoundTemplateHtml = templates?.notFound && templates.notFound(resultSet);\n      if (!notFoundTemplateHtml) return true;\n\n      const renderNotFoundTemplate = (html: string) => {\n        const notFoundEl = doc.createElement('div');\n        notFoundEl.classList.add(classNames.notFound);\n        templatify(notFoundEl, html);\n        listContainer.appendChild(notFoundEl);\n      };\n\n      if (!remote) {\n        renderNotFoundTemplate(notFoundTemplateHtml);\n      } else if (remoteQueryCache[JSON.stringify(resultSet.query)] || (asyncRender && !fetchInProgress)) {\n        // wait for remote results before rendering notFoundTemplate / render immediately if request was cached\n        renderNotFoundTemplate(notFoundTemplateHtml);\n      }\n\n      show();\n      return true;\n    }\n  };\n\n  /**\n   * Delete all children from typeahead DOM listContainer\n   */\n  const clearListDOM = () => {\n    while (listContainer.firstChild) {\n      listContainer.firstChild.remove();\n    }\n  };\n\n  const loader = () => {\n    if (!templates?.loader) {\n      return;\n    }\n\n    if (!fetchInProgress) {\n      const loaderEl = listContainer.querySelector(`.${classNames.loader}`);\n      loaderEl && listContainer.removeChild(loaderEl);\n      return;\n    }\n\n    // display spinner/loader\n    const loaderDiv = doc.createElement('div');\n    loaderDiv.classList.add(classNames.loader);\n    templatify(loaderDiv, templates.loader());\n    if (templates?.footer) {\n      listContainer.insertBefore(loaderDiv, listContainer.querySelector(`.${classNames.footer}`));\n    } else {\n      listContainer.appendChild(loaderDiv);\n    }\n  };\n\n  /**\n   * Responsible for drawing/updating the view\n   */\n  const update = (): void => {\n    // No Matches\n    if (noSuggestionsHandler()) return;\n\n    clearListDOM();\n\n    // function for rendering typeahead suggestions\n    const render = (item: T): HTMLDivElement => {\n      const itemElement = doc.createElement('div');\n      itemElement.classList.add(classNames.suggestion);\n      itemElement.setAttribute('role', 'option');\n      itemElement.setAttribute('aria-selected', 'false');\n      itemElement.setAttribute('aria-label', display(item));\n      if (templates?.suggestion) {\n        templatify(itemElement, templates.suggestion(item, resultSet));\n      } else {\n        itemElement.textContent = (item[identifier] as string) || '';\n      }\n      return itemElement;\n    };\n\n    // function to render typeahead groups\n    const renderGroup = (groupName: string): HTMLDivElement => {\n      const groupDiv = doc.createElement('div');\n      groupDiv.classList.add(classNames.group);\n      groupDiv.setAttribute('role', 'group');\n      groupDiv.setAttribute('aria-label', groupName);\n      if (templates?.group) {\n        templatify(groupDiv, templates.group(groupName, resultSet));\n      } else {\n        groupDiv.textContent = groupName || '';\n      }\n      return groupDiv;\n    };\n\n    const fragment = doc.createDocumentFragment();\n    const prevGroups: string[] = [];\n\n    // Add header template\n    if (templates?.header) {\n      const headerDiv = doc.createElement('div');\n      headerDiv.classList.add(classNames.header);\n      headerDiv.setAttribute('role', 'presentation');\n      const templateHtml = templatify(headerDiv, templates.header(resultSet));\n      templateHtml && fragment.appendChild(headerDiv);\n    }\n\n    // loop over suggestions\n    for (const [index, item] of resultSet.items.entries()) {\n      if (index === resultSet.limit) break;\n\n      // attach group if available\n      if (item[groupIdentifier] && !prevGroups.includes(item[groupIdentifier] as string)) {\n        prevGroups.push(item[groupIdentifier] as string);\n        const groupDiv = renderGroup(item[groupIdentifier] as string);\n        fragment.appendChild(groupDiv);\n      }\n\n      // attach suggestion\n      const div = render(item);\n      div.addEventListener('click', (ev: MouseEvent): void => {\n        clear();\n        selected = item;\n        input.value = display(item, ev);\n        emitInputEvent();\n      });\n      if (item === selected) {\n        div.classList.add(classNames.selected);\n        div.setAttribute('aria-selected', 'true');\n      }\n      fragment.appendChild(div);\n\n      // highlight matched text\n      config.highlight && hightlight(div, resultSet.query);\n    }\n\n    // Add footer template\n    if (templates?.footer) {\n      const footerDiv = doc.createElement('div');\n      footerDiv.classList.add(classNames.footer);\n      footerDiv.setAttribute('role', 'presentation');\n      const templateHtml = templatify(footerDiv, templates.footer(resultSet));\n      templateHtml && fragment.appendChild(footerDiv);\n    }\n\n    listContainer.appendChild(fragment);\n\n    // update hint if its enabled\n    hint && updateHint(selected || resultSet.items[0]);\n\n    // scroll when not in view\n    listContainer.querySelector(`.${classNames.selected}`)?.scrollIntoView({ block: 'nearest' });\n\n    show();\n  };\n\n  const inputEventHandler = (ev: InputEvent): void => {\n    // Fix: Firefox Android uses insertCompositionText instead of insertText.\n    if (typeof ev.inputType === 'undefined' || (ev.inputType === 'insertCompositionText' && !ev.isComposing)) {\n      return;\n    }\n\n    storedInput = input.value;\n    startFetch();\n  };\n\n  /**\n   * Select the previous item in suggestions\n   */\n  const selectPrev = (ev: KeyboardEvent): void => {\n    const maxLength = resultSet.items.length >= resultSet.limit ? resultSet.limit : resultSet.items.length;\n    // if first item is selected and UP Key is pressed, focus input and restore original input\n    if (selected === resultSet.items[0]) {\n      selected = undefined;\n      input.value = storedInput;\n      return;\n    }\n    // if focus is on input, and UP Key is pressed, select last item\n    if (!selected) {\n      selected = resultSet.items[maxLength - 1];\n    } else {\n      for (let i = maxLength - 1; i > 0; i--) {\n        if (selected === resultSet.items[i] || i === 1) {\n          selected = resultSet.items[i - 1];\n          break;\n        }\n      }\n    }\n\n    input.value = display(selected, ev);\n  };\n\n  /**\n   * Select the next item in suggestions\n   */\n  const selectNext = (ev: KeyboardEvent): void => {\n    const maxLength = resultSet.items.length >= resultSet.limit ? resultSet.limit : resultSet.items.length;\n    // if nothing selected, select the first suggestion\n    if (!selected) {\n      selected = resultSet.items[0];\n      input.value = display(selected, ev);\n      return;\n    }\n    // if we're at the end of the list, go to input box and restore original input\n    if (selected === resultSet.items[maxLength - 1]) {\n      selected = undefined;\n      input.value = storedInput;\n      return;\n    }\n\n    for (let i = 0; i < maxLength - 1; i++) {\n      if (selected === resultSet.items[i]) {\n        selected = resultSet.items[i + 1];\n        break;\n      }\n    }\n\n    input.value = display(selected, ev);\n  };\n\n  const keydownEventHandler = (ev: KeyboardEvent): void => {\n    // if raw input is empty if Esc is hit, clear out everything\n    if (ev.key === 'Escape' || (!input.value.length && !resultSet.items.length)) {\n      return clear();\n    }\n\n    if (resultSet.items.length && (ev.key === 'ArrowUp' || ev.key === 'ArrowDown')) {\n      ev.key === 'ArrowDown' ? selectNext(ev) : selectPrev(ev);\n      update();\n\n      ev.preventDefault();\n      ev.stopPropagation();\n\n      return;\n    }\n\n    const useSelectedValue = function (fallback = false) {\n      if (!selected && fallback && resultSet.items.length) {\n        selected = resultSet.items[0];\n      }\n      if (selected) {\n        clear();\n        input.value = display(selected, ev);\n        emitInputEvent();\n        return selected;\n      }\n    };\n\n    if (ev.key === 'Enter') {\n      preventSubmit && ev.preventDefault();\n      onSubmit(ev, useSelectedValue());\n\n      return;\n    }\n\n    if (ev.key === 'Tab' && isListOpen()) {\n      ev.preventDefault();\n      useSelectedValue(true);\n    }\n  };\n\n  const focusEventHandler = (): void => {\n    if (prefetch && prefetch.when === 'onFocus') {\n      prefetchData();\n    }\n    startFetch();\n  };\n\n  const startFetch = (): void => {\n    clearRemoteDebounceTimer();\n    const val = input.value.replace(/\\s{2,}/g, ' ').trim();\n\n    // empty/default template\n    if (templates?.empty && !val.length) {\n      const emptyHtml = templates.empty(resultSet);\n      resultSet.query = '';\n      if (resultSet.defaultItems?.length) {\n        // inject default suggestions\n        resultSet.items = normalizer(resultSet.defaultItems, identifier) as T[];\n        return update();\n      }\n\n      // inject empty html template only if default suggestions aren't provided\n      clear();\n      clearListDOM();\n      const emptyEl = doc.createElement('div');\n      emptyEl.classList.add(classNames.empty);\n      templatify(emptyEl, emptyHtml);\n      emptyHtml && listContainer.appendChild(emptyEl);\n      return show();\n    }\n\n    if (val.length >= minLen) {\n      resultSet.query = val;\n      calcSuggestions();\n\n      // if remote source exists, first check remote cache before making any query\n      const thumbprint = JSON.stringify(resultSet.query);\n      if (remote && resultSet.items.length < resultSet.limit && (remoteResponseCache[thumbprint] as [])?.length) {\n        calcSuggestions(remoteResponseCache[thumbprint] as []);\n      }\n\n      update(); // update view\n\n      remoteDebounceTimer = window.setTimeout(function (): void {\n        if (resultSet.items.length < resultSet.limit && !fetchInProgress) {\n          fetchDataFromRemote();\n        }\n      }, debounceXHR);\n    } else {\n      resultSet.query = '';\n      clear();\n    }\n  };\n\n  const formatQuery = (ip = '') => {\n    if (config.diacritics) {\n      ip = diacritics(ip);\n    }\n\n    return ip.toLowerCase();\n  };\n\n  const calcSuggestions = (newItems?: T[]): void => {\n    // get suggestions\n    let { suggestions, count }: { suggestions: T[]; count: number } = trie.search(resultSet.query, resultSet.limit);\n\n    if (newItems?.length) {\n      newItems.push(...suggestions); // merge suggestions\n\n      const uniqueItems = {} as Dictionary<T>;\n      newItems.forEach((item) => {\n        uniqueItems[identity(item)] = item;\n      });\n\n      suggestions = Object.values(uniqueItems);\n      count = suggestions.length;\n    }\n\n    // sort by starting letter of the query\n    sortByStartingLetter(suggestions);\n\n    // if suggestions need to be grouped, sort them by group\n    if (groupIdentifier) {\n      sortByGroup(suggestions);\n    }\n\n    // update items with available suggestions\n    resultSet.items = suggestions;\n    resultSet.count = count;\n\n    selected = undefined; // unselect previously calculated/cached suggestion\n    if (autoSelect && resultSet.items.length) {\n      selected = resultSet.items[0];\n    }\n  };\n\n  const fetchDataFromRemote = () => {\n    if (!remote) return;\n\n    fetchInProgress = true;\n    const frozenInput = resultSet.query;\n    const thumbprint = JSON.stringify(frozenInput);\n\n    // check cache, verify input length\n    if (remoteQueryCache[thumbprint] || !resultSet.query.length) {\n      fetchInProgress = false;\n      noSuggestionsHandler(true);\n      return;\n    }\n\n    loader();\n\n    let transformed: T[] = [];\n\n    fetchWrapper\n      .get(\n        (typeof remote.url === 'function' ? remote.url(frozenInput) : remote.url).replace(\n          remote.wildcard || '',\n          frozenInput\n        ),\n        remote?.requestOptions\n      )\n      .then(\n        (data) => {\n          transformed = transform(data) as T[];\n          transformed = normalizer(transformed, identifier) as T[];\n          updateSearchIndex(transformed);\n        },\n        (reject) => {\n          console.error('e05', reject);\n        }\n      )\n      .finally(() => {\n        // cache XHR requests so that same calls aren't made multiple times\n        remoteQueryCache[thumbprint] = true;\n        remoteResponseCache[thumbprint] = transformed || [];\n        fetchInProgress = false;\n        loader();\n        if (transformed.length && resultSet.query.length) {\n          calcSuggestions(transformed);\n          update();\n        }\n\n        // make another request if inputVal exists but is different than the last remote request\n        if (resultSet.query.length && frozenInput !== resultSet.query) {\n          fetchDataFromRemote();\n        }\n        noSuggestionsHandler(true);\n      });\n  };\n\n  /**\n   * Update the search Index with the identifier + dataTokens\n   */\n  function updateSearchIndex(iterable: T[]) {\n    if (!iterable.length) return;\n\n    // add new items to the search index\n    trie.add(iterable, identifier, identity);\n    if (dataTokens) {\n      dataTokens.forEach((token) => {\n        trie.add(iterable, token, identity);\n      });\n    }\n  }\n\n  /**\n   * Sorts array in place giving preference to the starting letter of the query\n   */\n  const sortByStartingLetter = (suggestions: T[]): void => {\n    const query = resultSet.query.toLowerCase();\n    suggestions.sort((one: Dictionary, two: Dictionary) => {\n      const a = (one[identifier] as string).toLowerCase();\n      const b = (two[identifier] as string).toLowerCase();\n\n      const startsWithA = a.startsWith(query);\n      const startsWithB = b.startsWith(query);\n\n      if (startsWithA && startsWithB) {\n        // If both start with the given string, sort by shortest length first\n        return a.length - b.length;\n      }\n      if (startsWithA) {\n        // If only A starts with the given string, it should come first\n        return -1;\n      }\n      if (startsWithB) {\n        // If only B starts with the given string, it should come first\n        return 1;\n      }\n\n      // If neither start with the given string, maintain original order\n      return 0;\n    });\n  };\n\n  /**\n   * Sorts(in-place) array by group\n   */\n  const sortByGroup = (suggestions: T[]) => {\n    suggestions.sort((a: Dictionary, b: Dictionary) => {\n      // if no group identifier was found, do not sort\n      if (!a[groupIdentifier] && !b[groupIdentifier]) return 0;\n      if (!a[groupIdentifier]) {\n        return -1;\n      }\n      if (!b[groupIdentifier]) {\n        return 1;\n      }\n      // sort in ascending order of group name\n      if ((a[groupIdentifier] as string) < (b[groupIdentifier] as string)) {\n        return -1;\n      }\n      if ((a[groupIdentifier] as string) > (b[groupIdentifier] as string)) {\n        return 1;\n      }\n\n      return 0;\n    });\n  };\n\n  /**\n   * Highlights a given text by its pattern\n   * @param Elm The listContainer element\n   * @param pattern the string to highlight\n   */\n  const hightlight = (Elm: HTMLElement, pattern: string): void => {\n    const getRegex = (query: string, wordsOnly: boolean) => {\n      const escapedQuery = escapeRegExp(query);\n      const regexStr = wordsOnly ? '\\\\b(' + escapedQuery + ')\\\\b' : '(' + escapedQuery + ')';\n      return new RegExp(regexStr, 'i');\n    };\n\n    const hightlightTextNode = (textNode: Text) => {\n      let match = regex.exec(textNode.data);\n\n      // check for diacritics if necessary\n      if (config.diacritics && !match) {\n        match = regex.exec(diacritics(textNode.data));\n      }\n\n      const wrapperNode = doc.createElement('span');\n      wrapperNode.className = classNames.highlight;\n\n      if (match) {\n        const patternNode = textNode.splitText(match.index);\n        patternNode.splitText(match[0].length);\n        wrapperNode.appendChild(patternNode.cloneNode(true));\n\n        textNode?.parentNode?.replaceChild(wrapperNode, patternNode);\n      }\n\n      return !!match;\n    };\n\n    const traverse = (el: HTMLElement | ChildNode, hightlightTextNode: (textNode: Text) => boolean) => {\n      const TEXT_NODE_TYPE = 3;\n      let childNode;\n\n      for (let i = 0; i < el.childNodes.length; i++) {\n        childNode = el.childNodes[i];\n\n        if (childNode.nodeType === TEXT_NODE_TYPE) {\n          i += hightlightTextNode(childNode as Text) ? 1 : 0;\n        } else {\n          traverse(childNode, hightlightTextNode);\n        }\n      }\n    };\n\n    const regex = getRegex(pattern, false);\n    pattern && traverse(Elm, hightlightTextNode);\n  };\n\n  /**\n   * injects Hint input element into the DOM\n   * @param inputHint the input hint element\n   */\n  function injectHintEl(inputHint: HTMLInputElement) {\n    ['id', 'name', 'placeholder', 'required', 'aria-label'].forEach((attr) => inputHint.removeAttribute(attr));\n    inputHint.setAttribute('readonly', 'true');\n    inputHint.setAttribute('aria-hidden', 'true');\n    inputHint.style.marginTop = `-${input.offsetHeight + parseInt(computedInputStyle.marginBottom)}px`; // super-impose hint on input\n    inputHint.tabIndex = -1;\n    inputHint.className = classNames.hint;\n\n    input.after(inputHint);\n  }\n\n  /**\n   * Updates the value of hint\n   * @param selectedItem The selected item\n   */\n  const updateHint = (selectedItem: T) => {\n    const rawInput = input.value;\n\n    // if raw string is not part of suggestion, hide the hint\n    if (\n      !rawInput ||\n      display(selectedItem) === rawInput || // if input string is exactly the same as selectedItem\n      formatQuery(display(selectedItem)).indexOf(\n        formatQuery(rawInput)\n          .replace(/\\s{2,}/g, ' ')\n          .trimStart()\n      ) !== 0\n    ) {\n      inputHint.value = '';\n    } else {\n      const item = display(selectedItem);\n      const regex = new RegExp(escapeRegExp(resultSet.query), 'i');\n      let match = regex.exec(item);\n\n      // check for diacritics if necessary\n      if (config.diacritics && !match) {\n        match = regex.exec(diacritics(item));\n      }\n\n      if (match) {\n        inputHint.value = (rawInput.replace(/\\s?$/, '') + item.substring(match[0].length)) as string;\n      }\n    }\n  };\n\n  /**\n   * Creates and appends a template to an HTMLElement\n   * @param El The html element that the template should attach to\n   * @param templateHtml The raw string representation of the html template\n   */\n  const templatify = (El: HTMLElement | DocumentFragment, templateHtml: string) => {\n    const template = doc.createElement('template');\n    template.innerHTML = templateHtml;\n    El.appendChild(template.content);\n    return templateHtml;\n  };\n\n  const blurEventHandler = (): void => {\n    // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM\n    setTimeout(() => {\n      if (doc.activeElement !== input) {\n        clear();\n      }\n    }, 50);\n  };\n\n  /**\n   * Handle Long clicks\n   */\n  listContainer.addEventListener('mousedown', function (e: Event) {\n    e.stopPropagation();\n    e.preventDefault();\n  });\n\n  /**\n   * Resets the typeahead instance and clears everything\n   * Clears the search index as well as the entire cache\n   * clearLocalSrc?: boolean, if true, clears even the suggestions added via the Local Source\n   * */\n  const reset = (clearLocalSrc?: boolean) => {\n    clear();\n    trie.clear();\n    local && !clearLocalSrc && addToIndex(local);\n    remoteQueryCache = {};\n    remoteResponseCache = {};\n    if (prefetch) {\n      prefetch.done = false;\n    }\n  };\n\n  /**\n   * This function will remove DOM elements, clears cache and removes all event handlers\n   */\n  const destroy = (): void => {\n    clearRemoteDebounceTimer();\n    reset();\n    wrapper.replaceWith(input.cloneNode());\n  };\n\n  // setup event handlers\n  input.addEventListener('keydown', keydownEventHandler);\n  input.addEventListener('input', inputEventHandler as EventListenerOrEventListenerObject);\n  input.addEventListener('blur', blurEventHandler);\n  input.addEventListener('focus', focusEventHandler);\n\n  return {\n    addToIndex,\n    reset,\n    destroy,\n    // trie, // trie exposed only for local tests\n  };\n}\n"],"names":["NOOP","args","escapeRegExp","text","isObject","item","diacritics","txt","normalizer","listItems","identifier","length","x","acc","currentItem","spaceTokenizer","tokenString","get","url","requestOptions","response","handleResponse","data","fetchWrapper","Trie","config","hasDiacritics","root","SENTINEL","tokenize","value","add","identity","node","token","prefix","i","l","uniqueId","find","matches","nodeStack","prefixStack","k","search","query","limit","queryTokens","objArrs","suggestions","currentObj","result","key","count","clear","typeahead","doc","listContainer","debounceXHR","preventSubmit","minLen","hint","autoSelect","templates","trie","groupIdentifier","displayCb","display","onSubmit","dataTokens","transform","local","remoteUrlType","remote","prefetch","classNames","resultSet","remoteQueryCache","remoteResponseCache","selected","remoteDebounceTimer","fetchInProgress","storedInput","addToIndex","updateSearchIndex","input","computedInputStyle","wrapper","parentEl","inputIndex","inputHint","injectHintEl","prefetchData","transformed","reject","show","hide","isListOpen","clearRemoteDebounceTimer","emitInputEvent","noSuggestionsHandler","asyncRender","clearListDOM","notFoundTemplateHtml","renderNotFoundTemplate","html","notFoundEl","templatify","loader","loaderEl","loaderDiv","update","render","itemElement","renderGroup","groupName","groupDiv","fragment","prevGroups","headerDiv","index","div","ev","hightlight","footerDiv","updateHint","inputEventHandler","startFetch","selectPrev","maxLength","selectNext","keydownEventHandler","useSelectedValue","fallback","focusEventHandler","val","emptyHtml","emptyEl","calcSuggestions","thumbprint","fetchDataFromRemote","formatQuery","ip","newItems","uniqueItems","sortByStartingLetter","sortByGroup","frozenInput","iterable","one","two","a","b","startsWithA","startsWithB","Elm","pattern","getRegex","wordsOnly","escapedQuery","regexStr","hightlightTextNode","textNode","match","regex","wrapperNode","patternNode","traverse","el","childNode","attr","selectedItem","rawInput","El","templateHtml","template","blurEventHandler","reset","clearLocalSrc","destroy"],"mappings":"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"}